[
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "factory",
        "type": "address"
      }
    ],
    "stateMutability": "nonpayable",
    "type": "constructor"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "target",
        "type": "address"
      }
    ],
    "name": "AddressEmptyCode",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "account",
        "type": "address"
      }
    ],
    "name": "AddressInsufficientBalance",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "FailedInnerCall",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "errorCode",
        "type": "uint256"
      }
    ],
    "name": "OrderBookError",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "token",
        "type": "address"
      }
    ],
    "name": "SafeERC20FailedOperation",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "uint64",
        "name": "deadline",
        "type": "uint64"
      },
      {
        "components": [
          {
            "internalType": "address",
            "name": "market",
            "type": "address"
          },
          {
            "components": [
              {
                "internalType": "bool",
                "name": "isBid",
                "type": "bool"
              },
              {
                "internalType": "uint16",
                "name": "priceIndex",
                "type": "uint16"
              },
              {
                "internalType": "uint256",
                "name": "orderIndex",
                "type": "uint256"
              }
            ],
            "internalType": "struct OrderKey[]",
            "name": "orderKeys",
            "type": "tuple[]"
          }
        ],
        "internalType": "struct IMarketRouter.ClaimOrderParams[]",
        "name": "paramsList",
        "type": "tuple[]"
      }
    ],
    "name": "claim",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "components": [
          {
            "internalType": "address",
            "name": "market",
            "type": "address"
          },
          {
            "internalType": "uint64",
            "name": "deadline",
            "type": "uint64"
          },
          {
            "internalType": "uint32",
            "name": "claimBounty",
            "type": "uint32"
          },
          {
            "internalType": "address",
            "name": "user",
            "type": "address"
          },
          {
            "internalType": "uint16",
            "name": "priceIndex",
            "type": "uint16"
          },
          {
            "internalType": "uint64",
            "name": "rawAmount",
            "type": "uint64"
          },
          {
            "internalType": "bool",
            "name": "postOnly",
            "type": "bool"
          },
          {
            "internalType": "bool",
            "name": "useNative",
            "type": "bool"
          },
          {
            "internalType": "uint256",
            "name": "baseAmount",
            "type": "uint256"
          }
        ],
        "internalType": "struct IMarketRouter.LimitOrderParams",
        "name": "params",
        "type": "tuple"
      }
    ],
    "name": "limitAsk",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "payable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "components": [
          {
            "internalType": "address",
            "name": "market",
            "type": "address"
          },
          {
            "components": [
              {
                "internalType": "bool",
                "name": "isBid",
                "type": "bool"
              },
              {
                "internalType": "uint16",
                "name": "priceIndex",
                "type": "uint16"
              },
              {
                "internalType": "uint256",
                "name": "orderIndex",
                "type": "uint256"
              }
            ],
            "internalType": "struct OrderKey[]",
            "name": "orderKeys",
            "type": "tuple[]"
          }
        ],
        "internalType": "struct IMarketRouter.ClaimOrderParams[]",
        "name": "claimParamsList",
        "type": "tuple[]"
      },
      {
        "components": [
          {
            "internalType": "address",
            "name": "market",
            "type": "address"
          },
          {
            "internalType": "uint64",
            "name": "deadline",
            "type": "uint64"
          },
          {
            "internalType": "uint32",
            "name": "claimBounty",
            "type": "uint32"
          },
          {
            "internalType": "address",
            "name": "user",
            "type": "address"
          },
          {
            "internalType": "uint16",
            "name": "priceIndex",
            "type": "uint16"
          },
          {
            "internalType": "uint64",
            "name": "rawAmount",
            "type": "uint64"
          },
          {
            "internalType": "bool",
            "name": "postOnly",
            "type": "bool"
          },
          {
            "internalType": "bool",
            "name": "useNative",
            "type": "bool"
          },
          {
            "internalType": "uint256",
            "name": "baseAmount",
            "type": "uint256"
          }
        ],
        "internalType": "struct IMarketRouter.LimitOrderParams",
        "name": "limitOrderParams",
        "type": "tuple"
      }
    ],
    "name": "limitAskAfterClaim",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "payable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "components": [
          {
            "internalType": "address",
            "name": "market",
            "type": "address"
          },
          {
            "internalType": "uint64",
            "name": "deadline",
            "type": "uint64"
          },
          {
            "internalType": "uint32",
            "name": "claimBounty",
            "type": "uint32"
          },
          {
            "internalType": "address",
            "name": "user",
            "type": "address"
          },
          {
            "internalType": "uint16",
            "name": "priceIndex",
            "type": "uint16"
          },
          {
            "internalType": "uint64",
            "name": "rawAmount",
            "type": "uint64"
          },
          {
            "internalType": "bool",
            "name": "postOnly",
            "type": "bool"
          },
          {
            "internalType": "bool",
            "name": "useNative",
            "type": "bool"
          },
          {
            "internalType": "uint256",
            "name": "baseAmount",
            "type": "uint256"
          }
        ],
        "internalType": "struct IMarketRouter.LimitOrderParams",
        "name": "params",
        "type": "tuple"
      }
    ],
    "name": "limitBid",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "payable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "components": [
          {
            "internalType": "address",
            "name": "market",
            "type": "address"
          },
          {
            "components": [
              {
                "internalType": "bool",
                "name": "isBid",
                "type": "bool"
              },
              {
                "internalType": "uint16",
                "name": "priceIndex",
                "type": "uint16"
              },
              {
                "internalType": "uint256",
                "name": "orderIndex",
                "type": "uint256"
              }
            ],
            "internalType": "struct OrderKey[]",
            "name": "orderKeys",
            "type": "tuple[]"
          }
        ],
        "internalType": "struct IMarketRouter.ClaimOrderParams[]",
        "name": "claimParamsList",
        "type": "tuple[]"
      },
      {
        "components": [
          {
            "internalType": "address",
            "name": "market",
            "type": "address"
          },
          {
            "internalType": "uint64",
            "name": "deadline",
            "type": "uint64"
          },
          {
            "internalType": "uint32",
            "name": "claimBounty",
            "type": "uint32"
          },
          {
            "internalType": "address",
            "name": "user",
            "type": "address"
          },
          {
            "internalType": "uint16",
            "name": "priceIndex",
            "type": "uint16"
          },
          {
            "internalType": "uint64",
            "name": "rawAmount",
            "type": "uint64"
          },
          {
            "internalType": "bool",
            "name": "postOnly",
            "type": "bool"
          },
          {
            "internalType": "bool",
            "name": "useNative",
            "type": "bool"
          },
          {
            "internalType": "uint256",
            "name": "baseAmount",
            "type": "uint256"
          }
        ],
        "internalType": "struct IMarketRouter.LimitOrderParams",
        "name": "limitOrderParams",
        "type": "tuple"
      }
    ],
    "name": "limitBidAfterClaim",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "payable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "components": [
          {
            "internalType": "address",
            "name": "market",
            "type": "address"
          },
          {
            "internalType": "uint64",
            "name": "deadline",
            "type": "uint64"
          },
          {
            "internalType": "address",
            "name": "user",
            "type": "address"
          },
          {
            "internalType": "uint16",
            "name": "limitPriceIndex",
            "type": "uint16"
          },
          {
            "internalType": "uint64",
            "name": "rawAmount",
            "type": "uint64"
          },
          {
            "internalType": "bool",
            "name": "expendInput",
            "type": "bool"
          },
          {
            "internalType": "bool",
            "name": "useNative",
            "type": "bool"
          },
          {
            "internalType": "uint256",
            "name": "baseAmount",
            "type": "uint256"
          }
        ],
        "internalType": "struct IMarketRouter.MarketOrderParams",
        "name": "params",
        "type": "tuple"
      }
    ],
    "name": "marketAsk",
    "outputs": [],
    "stateMutability": "payable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "components": [
          {
            "internalType": "address",
            "name": "market",
            "type": "address"
          },
          {
            "components": [
              {
                "internalType": "bool",
                "name": "isBid",
                "type": "bool"
              },
              {
                "internalType": "uint16",
                "name": "priceIndex",
                "type": "uint16"
              },
              {
                "internalType": "uint256",
                "name": "orderIndex",
                "type": "uint256"
              }
            ],
            "internalType": "struct OrderKey[]",
            "name": "orderKeys",
            "type": "tuple[]"
          }
        ],
        "internalType": "struct IMarketRouter.ClaimOrderParams[]",
        "name": "claimParamsList",
        "type": "tuple[]"
      },
      {
        "components": [
          {
            "internalType": "address",
            "name": "market",
            "type": "address"
          },
          {
            "internalType": "uint64",
            "name": "deadline",
            "type": "uint64"
          },
          {
            "internalType": "address",
            "name": "user",
            "type": "address"
          },
          {
            "internalType": "uint16",
            "name": "limitPriceIndex",
            "type": "uint16"
          },
          {
            "internalType": "uint64",
            "name": "rawAmount",
            "type": "uint64"
          },
          {
            "internalType": "bool",
            "name": "expendInput",
            "type": "bool"
          },
          {
            "internalType": "bool",
            "name": "useNative",
            "type": "bool"
          },
          {
            "internalType": "uint256",
            "name": "baseAmount",
            "type": "uint256"
          }
        ],
        "internalType": "struct IMarketRouter.MarketOrderParams",
        "name": "marketOrderParams",
        "type": "tuple"
      }
    ],
    "name": "marketAskAfterClaim",
    "outputs": [],
    "stateMutability": "payable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "components": [
          {
            "internalType": "address",
            "name": "market",
            "type": "address"
          },
          {
            "internalType": "uint64",
            "name": "deadline",
            "type": "uint64"
          },
          {
            "internalType": "address",
            "name": "user",
            "type": "address"
          },
          {
            "internalType": "uint16",
            "name": "limitPriceIndex",
            "type": "uint16"
          },
          {
            "internalType": "uint64",
            "name": "rawAmount",
            "type": "uint64"
          },
          {
            "internalType": "bool",
            "name": "expendInput",
            "type": "bool"
          },
          {
            "internalType": "bool",
            "name": "useNative",
            "type": "bool"
          },
          {
            "internalType": "uint256",
            "name": "baseAmount",
            "type": "uint256"
          }
        ],
        "internalType": "struct IMarketRouter.MarketOrderParams",
        "name": "params",
        "type": "tuple"
      }
    ],
    "name": "marketBid",
    "outputs": [],
    "stateMutability": "payable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "components": [
          {
            "internalType": "address",
            "name": "market",
            "type": "address"
          },
          {
            "components": [
              {
                "internalType": "bool",
                "name": "isBid",
                "type": "bool"
              },
              {
                "internalType": "uint16",
                "name": "priceIndex",
                "type": "uint16"
              },
              {
                "internalType": "uint256",
                "name": "orderIndex",
                "type": "uint256"
              }
            ],
            "internalType": "struct OrderKey[]",
            "name": "orderKeys",
            "type": "tuple[]"
          }
        ],
        "internalType": "struct IMarketRouter.ClaimOrderParams[]",
        "name": "claimParamsList",
        "type": "tuple[]"
      },
      {
        "components": [
          {
            "internalType": "address",
            "name": "market",
            "type": "address"
          },
          {
            "internalType": "uint64",
            "name": "deadline",
            "type": "uint64"
          },
          {
            "internalType": "address",
            "name": "user",
            "type": "address"
          },
          {
            "internalType": "uint16",
            "name": "limitPriceIndex",
            "type": "uint16"
          },
          {
            "internalType": "uint64",
            "name": "rawAmount",
            "type": "uint64"
          },
          {
            "internalType": "bool",
            "name": "expendInput",
            "type": "bool"
          },
          {
            "internalType": "bool",
            "name": "useNative",
            "type": "bool"
          },
          {
            "internalType": "uint256",
            "name": "baseAmount",
            "type": "uint256"
          }
        ],
        "internalType": "struct IMarketRouter.MarketOrderParams",
        "name": "marketOrderParams",
        "type": "tuple"
      }
    ],
    "name": "marketBidAfterClaim",
    "outputs": [],
    "stateMutability": "payable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "inputToken",
        "type": "address"
      },
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      },
      {
        "internalType": "uint256",
        "name": "inputAmount",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      },
      {
        "internalType": "bytes",
        "name": "data",
        "type": "bytes"
      }
    ],
    "name": "marketSwapCallback",
    "outputs": [],
    "stateMutability": "payable",
    "type": "function"
  }
]